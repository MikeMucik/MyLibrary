@model MyLibraryMVC.Application.ViewModels.Book.FindBookVm
@{
	ViewData["Title"] = "FindBook";
}

<h1>Znajdź książkę</h1>

<form asp-action="FindBook" asp-controller="Book" method="post" id="indexFindBooks">
	<div class="row-md6">
		<label for="Model.searchString">Wpisz tytuł</label>
		<input asp-for="SearchString" />
	</div>
	<div class="row-md6">
		<label for="Model.authorId">Wybierz autora:</label>
		<select asp-for="AuthorId" asp-items="ViewBag.Authors">
			<option value="0">Wszystkie</option>
		</select>
	</div>
	<div class="row-md6">
		<label for="categoryId">Wybierz kategorię:</label>
		<select asp-for="CategoryId" asp-items="ViewBag.Categories">
			<option value="0">Wszystkie</option>
		</select>
	</div>
	<div class="row-md6">
		<label for="ageGroupId">Wybierz grupę wiekową:</label>
		<select asp-for="AgeGroupId" asp-items="ViewBag.AgeGroups">
			<option value="0">Wszystkie</option>
		</select>
	</div>
	<div class="row-md6">
		<label for="houseOfPublishingId">Wybierz wydawnictwo:</label>
		<select asp-for="HouseOfPublishingId" asp-items="ViewBag.Houses">
			<option value="0">Wszystkie</option>
		</select>
	</div>
	<input type="submit" value=" Wyszukaj " />

	<div class="row">
		<table class="table">
			<thead>
				<tr>
					<th>
						Tytuł
						@* 	@Html.DisplayNameFor(model => model.Books.First().Title) *@
					</th>
					<th>
						Autorzy
						@* 	@Html.DisplayNameFor(model => model.Books.First().Authors) *@
					</th>
					<th>
						Kategoria
						@* 	@Html.DisplayNameFor(model => model.Books.First().Category) *@
					</th>
					<th>
						Grupa wiekowa
						@* 	@Html.DisplayNameFor(model => model.Books.First().AgeGroup) *@
					</th>
					<th>
						Czy jest wypożyczona
						@* 		@Html.DisplayNameFor(model => model.Books.First().IsLoan) *@
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.Books)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Title)
						</td>
						<td>
							@foreach (var it in item.Authors)
							{
								<div style="display: flex; gap: 10px;">
									@Html.DisplayFor(item => it.Name)
									@Html.DisplayFor(item => it.SurName)
								</div>
							}
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Category)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.AgeGroup)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.IsLoan)
						</td>
						<td>
							@if (User.IsInRole("Admin"))
							{
								@Html.ActionLink("Edytuj książkę", "BookEdit", new { id = item.Id })
								@Html.ActionLink("Usuń książkę", "BookDelete", new { id = item.Id },
										new
										{
										onclick = "return confirm('Czy na pewno chcesz usunąć tę książkę?');",
										@class = "btn btn-danger"
										})
							}
							|@Html.ActionLink("Szczegóły książki", "BookDetails", new { id = item.Id })|
							@if (User.IsInRole("Admin"))
							{
								@Html.ActionLink("Lista Wypożyczenia", "BookLoans", "Loan", new { bookId = item.Id })
							}|
							@if (User.IsInRole("Admin") || User.IsInRole("User")){
							@Html.ActionLink("Wypożyczenie", "LoanAdd", "Loan", new { bookId = item.Id })}
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
	<div class="row-md4">
		<div class="pagination">
			<table>
				<tr>
					@for (int i = 1; i <= Math.Ceiling(Model.TotalCount / (double)Model.PageSize); i++)
					{
						<td>
							@if (i == Model.CurrentPage)
							{
								<span>@i</span>
							}
							else
							{
								<a href="javascript:PagerClick(@i)">@i</a>
							}
						</td>
					}
				</tr>
			</table>
			<input type="hidden" name="pageNumber" id="pageNumber" />
			<input type="hidden" name="pageSize" id="pageSize" value="12" />
		</div>
	</div>
</form>
@section Scripts
{
	<script type="text/javascript">
		function PagerClick(index){
		document.getElementById("pageNumber").value = index;
		document.getElementById("indexFindBooks").submit();
		}
	</script>
}